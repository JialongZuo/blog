<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ojbect on Hugo tranquilpeak theme</title>
    <link>https://jialongzuo.github.io/tags/ojbect/</link>
    <description>Recent content in Ojbect on Hugo tranquilpeak theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jialongzuo.github.io/tags/ojbect/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ojbect源码学习</title>
      <link>https://jialongzuo.github.io/2018/03/ojbect%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jialongzuo.github.io/2018/03/ojbect%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid>
      <description>相信所有学习java的人都对Object这个类不陌生，它是类层级结构的根节点，所有类的父类（一切皆对象的具体体现？） it is believed that all the people who coding in java are not familiar with the Class about Object.it the root of hierarchy and every class has Object as a superClass(maybe it is a embodiment of &amp;lsquo;everything is object&amp;rsquo; )
 介绍(BRIEF INTRODUCTION)  Object类位于rt.jar(JAVA基础类库)中的java.lang包下。让我们看一下他的大体结构并逐个分析。 Object is located library of rt.jar,and package in java.lang,let us overview it and then try to analysis it.
 源码分析(SOURCE ANALYSIS) public class Object{ //此方法用于注册一些原生方法 //native是一个声明方法为本地方法的关键字，用于调用非java接口（如c/c++实现）。 //例如java本身不能操作系统底层，但可以通过JNI调用其他语言来实现此功能。 //this function is used for register some native function.</description>
    </item>
    
  </channel>
</rss>